/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import DAO.CaminhaoDAO;
import DAO.FuncionarioCaminhaoDAO;
import DAO.FuncionarioDAO;
import DAO.TabelaCamAtualizada;
import DAO.TabelaFuncAtualizada;
import DAO.TabelaFuncCamAtualizada;
import DAO.ThreadsRun;
import DTO.CaminhaoDTO;
import DTO.FuncionarioCaminhaoDTO;
import DTO.FuncionarioDTO;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import javax.swing.Timer;

/**
 *
 * @author Arthu
 */
public class SistemaCompletoView extends javax.swing.JFrame {
    private Timer timer1;
    private Timer timer2;
    private Timer timer3;
    

    /**
     * Creates new form SistemaCompletoView
     */
    public SistemaCompletoView() {
        initComponents();
        //listarValoresFuncionarios();
//        listarValoresCaminhoes();
//        listarFuncionarioCaminhao();
          
          IniciarTimer();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIDFunc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNomeFunc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCPFFunc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCNHFunc = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionario = new javax.swing.JTable();
        btnCadastrarFuncionario = new javax.swing.JButton();
        btnListarFuncionarios = new javax.swing.JButton();
        btnCarregarDadosFuncionario = new javax.swing.JButton();
        btnZerarCamposFuncionario = new javax.swing.JButton();
        btnAlterarFuncionario = new javax.swing.JButton();
        btnExcluirFuncionario = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnCarregarDadosVeic = new javax.swing.JButton();
        txtAnoVeic = new javax.swing.JTextField();
        btnZerarCamposVeic = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnAlterarVeic = new javax.swing.JButton();
        txtPlacaVeic = new javax.swing.JTextField();
        btnExcluirVeic = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaVeiculos = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtIDVeic = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnCadastrarVeic = new javax.swing.JButton();
        txtModeloVeic = new javax.swing.JTextField();
        btnListarVeic = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaFuncionarioCaminhao = new javax.swing.JTable();
        btnGerarVinculo = new javax.swing.JButton();
        btnListarFrotaAtiva = new javax.swing.JButton();
        btnExcluirVinculoFrotaAtiva = new javax.swing.JButton();
        txtTimer = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnTimer = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        btnLimparTudoFunc = new javax.swing.JButton();
        btnSobreFunc = new javax.swing.JButton();
        btnListarVinculos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Gerenciamento de Funcionários");

        jLabel2.setText("ID Funcionario");

        txtIDFunc.setEnabled(false);

        jLabel3.setText("Nome do Funcionário");

        jLabel4.setText("CPF do Funcionário");

        jLabel5.setText("CNH do Funcionário");

        tabelaFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "CNH"
            }
        ));
        jScrollPane1.setViewportView(tabelaFuncionario);

        btnCadastrarFuncionario.setText("CADASTRAR");
        btnCadastrarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarFuncionarioActionPerformed(evt);
            }
        });

        btnListarFuncionarios.setText("LISTAR FUNCIONARIOS");
        btnListarFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarFuncionariosActionPerformed(evt);
            }
        });

        btnCarregarDadosFuncionario.setText("CARREGAR DADOS");
        btnCarregarDadosFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarDadosFuncionarioActionPerformed(evt);
            }
        });

        btnZerarCamposFuncionario.setText("ZERAR CAMPOS");
        btnZerarCamposFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZerarCamposFuncionarioActionPerformed(evt);
            }
        });

        btnAlterarFuncionario.setText("ALTERAR");
        btnAlterarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarFuncionarioActionPerformed(evt);
            }
        });

        btnExcluirFuncionario.setText("EXCLUIR");
        btnExcluirFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirFuncionarioActionPerformed(evt);
            }
        });

        jLabel6.setText("Ano do Veiculo");

        btnCarregarDadosVeic.setText("CARREGAR DADOS");
        btnCarregarDadosVeic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarDadosVeicActionPerformed(evt);
            }
        });

        btnZerarCamposVeic.setText("ZERAR CAMPOS");
        btnZerarCamposVeic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZerarCamposVeicActionPerformed(evt);
            }
        });

        jLabel7.setText("Placa do Veiculo");

        btnAlterarVeic.setText("ALTERAR");
        btnAlterarVeic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarVeicActionPerformed(evt);
            }
        });

        btnExcluirVeic.setText("EXCLUIR");
        btnExcluirVeic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirVeicActionPerformed(evt);
            }
        });

        tabelaVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Modelo", "Ano", "Placa"
            }
        ));
        jScrollPane2.setViewportView(tabelaVeiculos);

        jLabel8.setText("ID Veiculo");

        txtIDVeic.setEnabled(false);

        jLabel9.setText("Modelo do Veiculo");

        btnCadastrarVeic.setText("CADASTRAR");
        btnCadastrarVeic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarVeicActionPerformed(evt);
            }
        });

        btnListarVeic.setText("LISTAR VEICULOS");
        btnListarVeic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarVeicActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setText("Gerenciamento de Veiculos");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setText("Gerenciamento de Frota ativa");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        tabelaFuncionarioCaminhao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null,null,null},
                {null, null,null,null}
            },
            new String [] {
                "IDFuncionario","Nome Funcionario", "IDCaminhao","Placa Caminhão"
            }
        ));
        jScrollPane4.setViewportView(tabelaFuncionarioCaminhao);

        btnGerarVinculo.setText("GERAR VINCULO ");
        btnGerarVinculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarVinculoActionPerformed(evt);
            }
        });

        btnListarFrotaAtiva.setText("LISTAR");
        btnListarFrotaAtiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarFrotaAtivaActionPerformed(evt);
            }
        });

        btnExcluirVinculoFrotaAtiva.setText("EXCLUIR VINCULO");
        btnExcluirVinculoFrotaAtiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirVinculoFrotaAtivaActionPerformed(evt);
            }
        });

        txtTimer.setText("5");

        jLabel12.setText("Segundos");

        btnTimer.setText("Definir");
        btnTimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimerActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("APENAS PARA O TESTE");

        btnLimparTudoFunc.setText("LIMPAR TODA A TABELA FUCIONARIOS");
        btnLimparTudoFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparTudoFuncActionPerformed(evt);
            }
        });

        btnSobreFunc.setText("SOBRECARREGAR DADOS FUNCIONARIOS");
        btnSobreFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSobreFuncActionPerformed(evt);
            }
        });

        btnListarVinculos.setText("LISTAR VINCULOS");
        btnListarVinculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarVinculosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCadastrarFuncionario)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtCPFFunc)
                                        .addComponent(txtCNHFunc)
                                        .addComponent(txtNomeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2)
                                    .addComponent(txtIDFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnZerarCamposFuncionario)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnAlterarFuncionario)
                                            .addComponent(btnExcluirFuncionario))
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnTimer)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel12)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnCarregarDadosFuncionario)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnListarFuncionarios))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtPlacaVeic, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtAnoVeic, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtModeloVeic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnAlterarVeic)
                                    .addComponent(btnCadastrarVeic)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtIDVeic, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)))
                                    .addComponent(btnExcluirVeic)
                                    .addComponent(btnZerarCamposVeic))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnCarregarDadosVeic)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnListarVeic))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGerarVinculo)
                            .addComponent(btnExcluirVinculoFrotaAtiva)
                            .addComponent(btnListarVinculos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnListarFrotaAtiva)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(btnLimparTudoFunc)
                    .addComponent(btnSobreFunc))
                .addGap(223, 223, 223))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNomeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCPFFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCNHFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCadastrarFuncionario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAlterarFuncionario)
                                    .addComponent(txtTimer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnExcluirFuncionario)
                                    .addComponent(btnTimer)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCarregarDadosFuncionario)
                                .addComponent(btnListarFuncionarios))
                            .addComponent(btnZerarCamposFuncionario)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDVeic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtModeloVeic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAnoVeic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPlacaVeic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCadastrarVeic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAlterarVeic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirVeic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnZerarCamposVeic))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnListarVeic)
                                    .addComponent(btnCarregarDadosVeic)))))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGerarVinculo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirVinculoFrotaAtiva)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnListarVinculos)))
                        .addGap(373, 373, 373)
                        .addComponent(btnListarFrotaAtiva))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparTudoFunc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSobreFunc)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarFuncionarioActionPerformed
        cadastrarFuncionario();
        //listarValoresFuncionarios();
    }//GEN-LAST:event_btnCadastrarFuncionarioActionPerformed

    private void btnListarFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarFuncionariosActionPerformed
        listarValoresFuncionarios();
    }//GEN-LAST:event_btnListarFuncionariosActionPerformed

    private void btnCarregarDadosFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarDadosFuncionarioActionPerformed
        carregarCamposFuncionario();
    }//GEN-LAST:event_btnCarregarDadosFuncionarioActionPerformed

    private void btnZerarCamposFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZerarCamposFuncionarioActionPerformed
        LimparCamposFuncionario();
    }//GEN-LAST:event_btnZerarCamposFuncionarioActionPerformed

    private void btnAlterarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarFuncionarioActionPerformed
     alterarFuncionario();
    // listarValoresFuncionarios();
     LimparCamposFuncionario();
    }//GEN-LAST:event_btnAlterarFuncionarioActionPerformed

    private void btnExcluirFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirFuncionarioActionPerformed
        excluirFuncionario();
        LimparCamposFuncionario();
        //listarValoresFuncionarios();
    }//GEN-LAST:event_btnExcluirFuncionarioActionPerformed

    private void btnCarregarDadosVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarDadosVeicActionPerformed
        carregarCamposCaminhao();
    }//GEN-LAST:event_btnCarregarDadosVeicActionPerformed

    private void btnZerarCamposVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZerarCamposVeicActionPerformed
        limparCamposCaminhao();
    }//GEN-LAST:event_btnZerarCamposVeicActionPerformed

    private void btnAlterarVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarVeicActionPerformed
        alterarCaminhao();
        listarValoresCaminhoes();
        limparCamposCaminhao();
    }//GEN-LAST:event_btnAlterarVeicActionPerformed

    private void btnExcluirVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirVeicActionPerformed
       excluirCaminhao();
       limparCamposCaminhao();
       listarValoresCaminhoes();
    }//GEN-LAST:event_btnExcluirVeicActionPerformed

    private void btnCadastrarVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarVeicActionPerformed
        cadastrarCaminhao();
        listarValoresCaminhoes();
        limparCamposCaminhao();
    }//GEN-LAST:event_btnCadastrarVeicActionPerformed

    private void btnListarVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarVeicActionPerformed
      listarValoresCaminhoes();
    }//GEN-LAST:event_btnListarVeicActionPerformed

    private void btnGerarVinculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarVinculoActionPerformed
       cadastrarFuncionarioCaminhao();
       listarFuncionarioCaminhao();
       limparCamposCaminhao();
       LimparCamposFuncionario();
               
    }//GEN-LAST:event_btnGerarVinculoActionPerformed

    private void btnListarFrotaAtivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarFrotaAtivaActionPerformed
        listarFuncionarioCaminhao();
    }//GEN-LAST:event_btnListarFrotaAtivaActionPerformed

    private void btnExcluirVinculoFrotaAtivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirVinculoFrotaAtivaActionPerformed
       excluirFuncionarioCaminhao();
       listarFuncionarioCaminhao();
       limparCamposCaminhao();
       LimparCamposFuncionario();
    }//GEN-LAST:event_btnExcluirVinculoFrotaAtivaActionPerformed

    private void btnTimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimerActionPerformed
       alterarTimer();
    }//GEN-LAST:event_btnTimerActionPerformed

    private void btnLimparTudoFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparTudoFuncActionPerformed
        limparTudoFuncionario();
    }//GEN-LAST:event_btnLimparTudoFuncActionPerformed

    private void btnSobreFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSobreFuncActionPerformed
        //cadastrarMuitosFuncionarios();
    }//GEN-LAST:event_btnSobreFuncActionPerformed

    private void btnListarVinculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarVinculosActionPerformed
       listarFuncionarioCaminhao();
    }//GEN-LAST:event_btnListarVinculosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaCompletoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaCompletoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaCompletoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaCompletoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SistemaCompletoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarFuncionario;
    private javax.swing.JButton btnAlterarVeic;
    private javax.swing.JButton btnCadastrarFuncionario;
    private javax.swing.JButton btnCadastrarVeic;
    private javax.swing.JButton btnCarregarDadosFuncionario;
    private javax.swing.JButton btnCarregarDadosVeic;
    private javax.swing.JButton btnExcluirFuncionario;
    private javax.swing.JButton btnExcluirVeic;
    private javax.swing.JButton btnExcluirVinculoFrotaAtiva;
    private javax.swing.JButton btnGerarVinculo;
    private javax.swing.JButton btnLimparTudoFunc;
    private javax.swing.JButton btnListarFrotaAtiva;
    private javax.swing.JButton btnListarFuncionarios;
    private javax.swing.JButton btnListarVeic;
    private javax.swing.JButton btnListarVinculos;
    private javax.swing.JButton btnSobreFunc;
    private javax.swing.JButton btnTimer;
    private javax.swing.JButton btnZerarCamposFuncionario;
    private javax.swing.JButton btnZerarCamposVeic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tabelaFuncionario;
    private javax.swing.JTable tabelaFuncionarioCaminhao;
    private javax.swing.JTable tabelaVeiculos;
    private javax.swing.JTextField txtAnoVeic;
    private javax.swing.JTextField txtCNHFunc;
    private javax.swing.JTextField txtCPFFunc;
    private javax.swing.JTextField txtIDFunc;
    private javax.swing.JTextField txtIDVeic;
    private javax.swing.JTextField txtModeloVeic;
    private javax.swing.JTextField txtNomeFunc;
    private javax.swing.JTextField txtPlacaVeic;
    private javax.swing.JTextField txtTimer;
    // End of variables declaration//GEN-END:variables

    //FUNÇÕES RELACIONADAS AOS CAMPOS DE FUNCIONÁRIO - INICIO//
    
    private void LimparCamposFuncionario(){
        
        txtNomeFunc.setText("");
        txtIDFunc.setText("");
        txtCPFFunc.setText("");
        txtCNHFunc.setText("");
        txtNomeFunc.requestFocus();
        
    }
    
    
    private void cadastrarFuncionario(){
       
        String nome, cpf, cnh;
        
        nome = txtNomeFunc.getText();
        cpf = txtCPFFunc.getText();
        cnh = txtCNHFunc.getText();
        
        FuncionarioDTO objfuncionariodto = new FuncionarioDTO();
        objfuncionariodto.setNomeFunc(nome);
        objfuncionariodto.setCpfFunc(cpf);
        objfuncionariodto.setCnhFunc(cnh);
        
        
        FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
        ThreadsRun minhaThread = new ThreadsRun();
        minhaThread.executarNovaThread(()-> {
            objfuncionariodao.cadastrarFuncionario(objfuncionariodto);
        });
        
        
        LimparCamposFuncionario();
    }
    
    public void listarValoresFuncionarios(){
        listarFuncionarioCaminhao();
        listarValoresCaminhoes();
        
        try {
            FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
            
            DefaultTableModel model = (DefaultTableModel) tabelaFuncionario.getModel();
            model.setNumRows(0);
            
            ArrayList<FuncionarioDTO> listar = objfuncionariodao.PesquisarFuncionario();
            
            for (int num = 0; num <listar.size(); num++){
                
                model.addRow(new Object[]{
                    listar.get(num).getCodFunc(),
                    listar.get(num).getNomeFunc(),
                    listar.get(num).getCpfFunc(),
                    listar.get(num).getCnhFunc()
                });
            }
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - ListarValoresFuncionarios: " + erro);
        }
    }
    
    private void carregarCamposFuncionario(){
        
        int setar = tabelaFuncionario.getSelectedRow();
        
        
       
        try {
            
            txtIDFunc.setText(tabelaFuncionario.getModel().getValueAt(setar, 0).toString());
            txtNomeFunc.setText(tabelaFuncionario.getModel().getValueAt(setar   , 1).toString());
            txtCPFFunc.setText(tabelaFuncionario.getModel().getValueAt(setar, 2).toString());
            txtCNHFunc.setText(tabelaFuncionario.getModel().getValueAt(setar, 3).toString());
            
        }catch(ArrayIndexOutOfBoundsException erro){
            JOptionPane.showMessageDialog(null,"Favor selecionar algum item da tabela para fazer o carregamento");
            
        }catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - CarregarCamposFuncionario: " + erro);
        }
        
        
    }
    
    private void alterarFuncionario(){
        
        try {
            
            String nome, cpf, cnh;
            int id;
            
            id = Integer.parseInt(txtIDFunc.getText());
            nome = txtNomeFunc.getText();
            cpf = txtCPFFunc.getText();
            cnh = txtCNHFunc.getText();
            
            FuncionarioDTO objfuncionariodto = new FuncionarioDTO();
            objfuncionariodto.setCodFunc(id);
            objfuncionariodto.setNomeFunc(nome);
            objfuncionariodto.setCpfFunc(cpf);
            objfuncionariodto.setCnhFunc(cnh);
            
            FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
            
            ThreadsRun minhaThread = new ThreadsRun();
            minhaThread.executarNovaThread(()-> {
            objfuncionariodao.alterarFuncionario(objfuncionariodto);
        });
            
            
            
            
        }catch (NumberFormatException erro){
            JOptionPane.showMessageDialog(null, "Favor carregar algum campo através do botão 'Carregar'");
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - AlterarFuncionario: " + erro);
        }
        
    }
    
    private void excluirFuncionario(){
        
        int id;
        
        try {
            
            id = Integer.parseInt(txtIDFunc.getText());

           FuncionarioDTO objfuncionariodto = new FuncionarioDTO();
           objfuncionariodto.setCodFunc(id);

           FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
           
           ThreadsRun minhaThread = new ThreadsRun();
           minhaThread.executarNovaThread(()-> {
           objfuncionariodao.excluirFuncionario(id);
           });

           
            
        } catch (NumberFormatException erro){
            JOptionPane.showMessageDialog(null, "Favor carregar algum campo através do botão 'Carregar'");
            
        }catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - ExcluirFuncionario: " + erro);
        }
        
        
     }

//    private void cadastrarMuitosFuncionarios(){
//        
//        FuncionarioDTO objfuncionariodto = new FuncionarioDTO();
//        
//        for(int i =0; i < 10000; i++){
//            
//        objfuncionariodto.setNomeFunc("nome" + i);
//        objfuncionariodto.setCpfFunc("cpf" + i);
//        objfuncionariodto.setCnhFunc("cnh" + i);
//        
//        FuncionarioDAO objfuncionariodao = new FuncionarioDAO();
//        objfuncionariodao.cadastrarFuncionario(objfuncionariodto);
//        
//        }
//    }
//    
    //FUNÇÕES RELACIONADAS AOS CAMPOS DE FUNCIONÁRIO - FIM//
    //FUNÇÕES RELACIONADAS AOS CAMPOS DE CAMINHAO - INICIO//
    
    private void limparCamposCaminhao(){
        txtIDVeic.setText("");
        txtModeloVeic.setText("");
        txtAnoVeic.setText("");
        txtPlacaVeic.setText("");
        txtModeloVeic.requestFocus();
    }
    
    
    private void cadastrarCaminhao(){
        
        String modelo, ano, placa;
        
        modelo = txtModeloVeic.getText();
        ano = txtAnoVeic.getText();
        placa = txtPlacaVeic.getText();
        
        CaminhaoDTO objcaminhaodto = new CaminhaoDTO();
        
        objcaminhaodto.setModVeic(modelo);
        objcaminhaodto.setAnoVeic(ano);
        objcaminhaodto.setPlacaVeic(placa);
        
        CaminhaoDAO objcaminhaodao = new CaminhaoDAO();
        ThreadsRun minhaThread = new ThreadsRun();
        minhaThread.executarNovaThread(()-> {
        objcaminhaodao.cadastrarCaminhao(objcaminhaodto);
        });
        
        
    }
    
    public void listarValoresCaminhoes(){
        
        try {
            
        CaminhaoDAO objcaminhaodao = new CaminhaoDAO();
        
        DefaultTableModel model = (DefaultTableModel) tabelaVeiculos.getModel();
        model.setNumRows(0);
        
        ArrayList<CaminhaoDTO> lista = objcaminhaodao.PesquisarCaminhao();
        
            for(int num =0; num <lista.size(); num++){
                model.addRow(new Object[]{
                    lista.get(num).getIdVeic(),
                    lista.get(num).getModVeic(),
                    lista.get(num).getAnoVeic(),
                    lista.get(num).getPlacaVeic()
                });
            }
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - ListarValoresCaminhoes: " + erro);
       }
    }
    
    private void carregarCamposCaminhao(){
        int setar = tabelaVeiculos.getSelectedRow();
        
        try {
            txtIDVeic.setText(tabelaVeiculos.getModel().getValueAt(setar, 0).toString());
            txtModeloVeic.setText(tabelaVeiculos.getModel().getValueAt(setar, 1).toString());
            txtAnoVeic.setText(tabelaVeiculos.getModel().getValueAt(setar, 2).toString());
            txtPlacaVeic.setText(tabelaVeiculos.getModel().getValueAt(setar, 3).toString());
            
        }catch(ArrayIndexOutOfBoundsException erro){
            JOptionPane.showMessageDialog(null,"Favor selecionar algum item da tabela para fazer o carregamento");
            
        }catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - CarregarCamposCaminhao: " + erro);
        }
        
        
        
        
    }
    
    private void alterarCaminhao(){
        
        try {
            
            String modelo, ano, placa;
            int id;
            
            id = Integer.parseInt(txtIDVeic.getText());
            modelo = txtModeloVeic.getText();
            ano = txtAnoVeic.getText();
            placa = txtPlacaVeic.getText();
            
            CaminhaoDTO objcaminhaodto = new CaminhaoDTO();
            
            objcaminhaodto.setIdVeic(id);
            objcaminhaodto.setModVeic(modelo);
            objcaminhaodto.setAnoVeic(ano);
            objcaminhaodto.setPlacaVeic(placa);
            
            CaminhaoDAO objcaminhaodao = new CaminhaoDAO();
            
            ThreadsRun minhaThread = new ThreadsRun();
            minhaThread.executarNovaThread(()-> {
            objcaminhaodao.alterarCaminhao(objcaminhaodto);
            });
            
            
            
        } catch (NumberFormatException erro){
            JOptionPane.showMessageDialog(null, "Favor carregar algum campo através do botão 'Carregar'");
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - AlterarCaminhao: " + erro);
        }
    }
    
    private void excluirCaminhao(){
    
        int id;
        
        
    
        try {
        id = Integer.parseInt(txtIDVeic.getText());
        CaminhaoDTO objcaminhaodto = new CaminhaoDTO();
        objcaminhaodto.setIdVeic(id);
        
        CaminhaoDAO objcaminhaodao = new CaminhaoDAO();
        
        ThreadsRun minhaThread = new ThreadsRun();
        minhaThread.executarNovaThread(()-> {
        objcaminhaodao.excluirCaminhao(id);
        });
            
        
        
        } catch (NumberFormatException erro){
            JOptionPane.showMessageDialog(null, "Favor carregar algum campo através do botão 'Carregar'");
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - ExcluirCaminhao: " + erro);
        }
        
}
    // FIM DAS FUNÇÕES DE CAMINHAO
    
   // INICIO FUNÇÕES CLASSE RELAÇÃO DE FUNCIONARIO+CAMINHAO//
    
    private void cadastrarFuncionarioCaminhao(){
        
        int idFunc, idVeic;
 
        try {
            idFunc = Integer.parseInt(txtIDFunc.getText());
            idVeic = Integer.parseInt(txtIDVeic.getText());

            FuncionarioCaminhaoDTO objfuncionariocaminhaodto = new FuncionarioCaminhaoDTO();

            objfuncionariocaminhaodto.setAtCodFunc(idFunc);
            objfuncionariocaminhaodto.setAtCodVeic(idVeic);

            FuncionarioCaminhaoDAO objfuncionariocaminhaodao = new FuncionarioCaminhaoDAO();
            
            ThreadsRun minhaThread = new ThreadsRun();
            minhaThread.executarNovaThread(()-> {
            objfuncionariocaminhaodao.cadastrarFuncionarioCaminhao(objfuncionariocaminhaodto);
            });

            
        }catch (NumberFormatException erro){
            JOptionPane.showMessageDialog(null, "Favor carregar algum campo através dos botões 'Carregar' na aba de funcionararios e de veiculos");
            
        }catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - CadastrarCaminhaoFuncionario: " + erro);
        }
    
        
        
        
    }
    
    public void listarFuncionarioCaminhao(){
        
        try {
            
            FuncionarioCaminhaoDAO objfuncionariocaminhaodao = new FuncionarioCaminhaoDAO();
            
            DefaultTableModel model = (DefaultTableModel) tabelaFuncionarioCaminhao.getModel();
            model.setNumRows(0);
            
            ArrayList<FuncionarioCaminhaoDTO> lista = objfuncionariocaminhaodao.pesquisarFuncionarioCaminhao();
            
            for (int num =0; num <lista.size(); num++){
                model.addRow(new Object[]{
                    lista.get(num).getAtCodFunc(),
                    lista.get(num).getAtNomeFunc(),
                    lista.get(num).getAtCodVeic(),
                    lista.get(num).getAtModVeic()
                    
                });
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - CadastrarCaminhaoFuncionario: " + erro);
        }
    }
    
    
    private void excluirFuncionarioCaminhao(){
        
        int idFunc,idVeic;
        int setar = tabelaFuncionarioCaminhao.getSelectedRow();
        
        try {
            idFunc = (int) tabelaFuncionarioCaminhao.getModel().getValueAt(setar, 0);
            idVeic = (int) tabelaFuncionarioCaminhao.getModel().getValueAt(setar, 2);

            FuncionarioCaminhaoDAO objfuncionariocaminhaodao = new FuncionarioCaminhaoDAO();
            
            ThreadsRun minhaThread = new ThreadsRun();
            minhaThread.executarNovaThread(()-> {
            objfuncionariocaminhaodao.ExcluirFuncionarioCaminhao(idFunc, idVeic);
            });
            
            
            
        } catch (NumberFormatException erro){
            JOptionPane.showMessageDialog(null, "Favor selecionar o vinculo desejado na tabela");
            
        }catch (Exception erro) {
            JOptionPane.showMessageDialog(null,"View - excluirFuncionarioCaminhao: " + erro);
        }
        
        
        
        
    }
    
    
    //FIM FUNÇÕES DE CLASSE RELAÇÃO DE FUNCIONARIO+CAMINHAO//
    
    private void limparTudoFuncionario(){
        
        FuncionarioDAO objfuncionario = new FuncionarioDAO();
        
        
        ThreadsRun minhaThread = new ThreadsRun();
        minhaThread.executarNovaThread(()-> {
        objfuncionario.limparTabelaCompleta();
        });
        
    
    }

    private void IniciarTimer(){
        
        int tempo = 5000;
        int valor = Integer.parseInt(txtTimer.getText());
        
        tempo = valor * 1000;
        
        
        SistemaCompletoView minhaView = this;
        TabelaFuncAtualizada tabelaFuncAtualizada = new TabelaFuncAtualizada(minhaView );
        TabelaCamAtualizada tabelaCamAtualizada = new TabelaCamAtualizada(minhaView);
        TabelaFuncCamAtualizada tabelaFuncCamAtualizada = new TabelaFuncCamAtualizada(minhaView);
        
        timer1 = new Timer(tempo, e -> tabelaFuncAtualizada.run());
        timer2 = new Timer(tempo, e -> tabelaFuncCamAtualizada.run());
        timer3 = new Timer(tempo, e -> tabelaCamAtualizada.run());
        
        
        timer1.start();
        timer2.start();
        timer3.start();
        
        
    }
    
    private void alterarTimer(){
        
        int valor = Integer.parseInt(txtTimer.getText());
        
        int tempo = valor * 1000;
        
        timer1.setDelay(tempo); 
        timer2.setDelay(tempo);
        timer3.setDelay(tempo);
    }
    
    
    private void fechar(){
        timer1.stop();
        timer2.stop();
        timer3.stop();
    }
}

